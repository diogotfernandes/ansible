---
- hosts: kvm_host
  become: False
  gather_facts: False

  roles:
    - kvm

  vars:
    kvm_base_vm: debian10
    kvm_network: alcafaz.test
    host:
      - name: demo11.alcafaz.test		    ## CHANGE ME!
        ip: '192.168.100.81'		      ## CHANGE ME!
        inventory_group: webservers   ## CHANGE ME!
        add_to_inventory: True        ## CHANGE ME!
      - name: demo12.alcafaz.test		      ## CHANGE ME!
        ip: '192.168.100.82'		        ## CHANGE ME!
        inventory_group: nameservers    ## CHANGE ME!
        add_to_inventory: True          ## CHANGE ME!
    kvm_name: "{{ host.name }}"

  tasks:
    ## Wait for vm start
    - name: Sleep for 25 seconds and continue with play
      wait_for:
        timeout: 25 # 25 seconds
      delegate_to: localhost
      tags: always

## Criar vários blocos de "-hosts: host" ou agrupar novos hosts num grupos
## específico. P.ex: "[new-hosts]"...
## Especificar a vars dentro do bloco "- hosts", ou em host_vars/host.yml
- hosts: demo11
  gather_facts: True
  become: True

  vars:
    ansible_user: root    ## user com privilegios da vm 'debian10'
    ansible_password: qwerty  ## password do user com privilegios da vm 'debian10'

  roles:
    - bootstrap

- hosts: demo12
  gather_facts: True
  become: True

  vars:
    ansible_user: root    ## user com privilegios da vm 'debian10'
    ansible_password: qwerty  ## password do user com privilegios da vm 'debian10'

  roles:
    - bootstrap

  # post_tasks:
   ## por exemplo enviar email a avisar que a nova máquina está pronta!

#
## Variáveis com  'CHANGE ME!' devem ser alteradas, de acordo com o host a configurar.
#
## CREATE VM, ADD STATIC LEASE (virtual network), START VM AND BOOTSTRAP ALL
## ansible-playbook 02.create-vm-and-bootstrap.yml
##   --tags "create_vm, start, packages, timezone, hostname, locales, ssh, users, ufw"
##   -i inventories/alcafaz.test/hosts
