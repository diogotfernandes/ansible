---
- name: start vm
  virt:
    command: start
    name: "{{ kvm_name }}"
  when: kvm_name in (kvm_info|map(attribute="name")|list) and kvm_vm_status.status == 'shutdown'
  tags: [never, start]

- name: start vm
  virt:
    command: unpause
    name: "{{ kvm_name }}"
  when: kvm_name in (kvm_info|map(attribute="name")|list) and kvm_vm_status.status == 'paused'

  tags: [never, start]
- name: Info
  debug:
    msg:
      - "{{ kvm_name }} is already running!"
  when: kvm_vm_status.status == 'running'
  tags: [never, start]

- name: wait util vm is running
  virt:
    command: status
    name: "{{ kvm_name }}"
  register: kvm_vm_status
  until: kvm_vm_status.status == 'running'
  retries: 1500
  delay: 10
  when: kvm_name in (kvm_info|map(attribute="name")|list) and kvm_vm_status.status == 'shutdown'
  tags: never, start

- virt:
   command: info
  register: aux_info
  tags: always

# ok: [localhost] => (item={'key': 'debian10', 'value': {'state': 'shutdown', 'maxMem': '1048576', 'memory': '1048576', 'nrVirtCpu': 2, 'cpuTime': '0', 'autostart': 0}})


- name: setfact
  set_fact:
    kvm_final_info: "{{ kvm_final_info|default([]) + [ { \
                  'name': item.key, \
                  'state': item.value.state, \
                  'maxMem': item.value.maxMem, \
                  'memory': item.value.memory, \
                  'nrVirtCpu': item.value.nrVirtCpu, \
                  'cpuTime': item.value.cpuTime, \
                  'autostart': item.value.autostart \
                  } ] }}"
  with_dict: "{{ aux_info }}"
  when:
    - item.key != 'changed'
    - item.key != 'failed'
  tags: always

- name: kvm_final_info
  debug:
    var: kvm_final_info
  tags: never, start
