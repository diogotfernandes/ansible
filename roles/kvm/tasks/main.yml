---
# tasks file for kvm

# - name: Verificar OS
#   fail:  msg="This role is not supported in {{ansible_os_family}} OS"
#   when: ansible_os_family != "Debian"


- virt:
   command: info
  register: aux_info
  tags: always

# ok: [localhost] => (item={'key': 'debian10', 'value': {'state': 'shutdown', 'maxMem': '1048576', 'memory': '1048576', 'nrVirtCpu': 2, 'cpuTime': '0', 'autostart': 0}})

- name: setfact
  set_fact:
    kvm_info: "{{ kvm_info|default([]) + [ { \
                  'name': item.key, \
                  'state': item.value.state, \
                  'maxMem': item.value.maxMem, \
                  'memory': item.value.memory, \
                  'nrVirtCpu': item.value.nrVirtCpu, \
                  'cpuTime': item.value.cpuTime, \
                  'autostart': item.value.autostart \
                  } ] }}"
  with_dict: "{{ aux_info }}"
  when:
    - item.key != 'changed'
    - item.key != 'failed'
  tags: always


- name: kvm_vms_info
  debug:
    var: kvm_info
  tags: always

- name: Get status of vm
  virt:
    command: status
    name: "{{ kvm_name }}"
  register: kvm_vm_status
  when: kvm_name in kvm_info|map(attribute="name")|list
  tags: never, start, shutdown

- name: Start vm
  include_tasks: start.yml
  tags: never, start

- name: shutdown vm
  include_tasks: stop.yml
  tags: never, shutdown


# - name: Record contains IP
#   debug:
#     msg: "{{kvm_info|map(attribute='name')|list}}"
#   when: kvm_name in kvm_info|map(attribute="name")|list


# - fail:

#
#
# - name: List all vms
#   virt:
#     command: list_vms
#     uri: "{{ kvm_uri }}"
#   register: kvm_vms
#
# - name: list vms
#   debug:
#     var: kvm_vms.list_vms
#
# - name: Select vm
#   pause:
#     prompt: "Enter the vm name"
#   register: kvm_name


# - name: get xml
#   virt_net:
#     command: get_xml
#     name: default
#   register: kvm_xml
#
#
# - shell: "virsh net-update default add ip-dhcp-host \"<host mac='{{ item.mac }}' name='{{ item.name }}' ip='{{ item.ip }}' />\" --live --config"
#   # when: kvm_xml.get_xml | regex_search('(item.mac)') is  match
#   with_items: "{{ kvm_dhcp_hosts }}"
#   ignore_errors: True
#   tags: [ add-ip ]
# # - fail:
#
# ## NÃO É PERSISTENTE!!!
# # # Add a new host in the dhcp pool
# # - virt_net:
# #     name: default
# #     command: modify
# #     xml: "<host mac='52:54:00:ae:d7:0a' name='mail.alcafaz.test' ip='192.168.100.10'/>"
#
#
# # - name: add dhcp entry using shell
# #   shell: virsh net-update default add ip-dhcp-host "<host mac='52:54:00:68:bd:6f' name='ns1.alcafaz.test' ip='192.168.100.5' />" --live --config
#
# - virt_net:
#     command: list_nets
#   register: kvm_networks
#
# - debug:
#     msg: "{{ kvm_networks.list_nets }}"
#
# - name: Get facts
#   virt_net:
#     command: facts
#   register: kvm_network_facts
#
# - debug:
#    msg: "{{ kvm_network_facts }}"
