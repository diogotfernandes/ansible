# This file is imported by the Mailman Suite. It is used to override
# the default settings from /usr/share/mailman3-web/settings.py.

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'PmlYHbH+VR1QAeNGRCYEriCeS1TeaxVLR1B22G2SRgIkufs7'

ADMINS = (
{% for item in mailman_web.admins %}
     {{ '(\'' ~ item.description ~ '\', \'' ~ item.email ~ '\'),' }}
{% endfor %}
)

# Hosts/domain names that are valid for this site; required if DEBUG is False
# See https://docs.djangoproject.com/en/1.8/ref/settings/#allowed-hosts
# Set to '*' per default in the Deian package to allow all hostnames. Mailman3
# is meant to run behind a webserver reverse proxy anyway.
ALLOWED_HOSTS = [
{% for host in mailman_web.alllowed_hosts %}
    {{ '\'' ~ host.name ~ '\'' }}
{% endfor %}
]

# Mailman API credentials
MAILMAN_REST_API_URL = '{{ mailman_web.mailman_rest_api_url }}'
MAILMAN_REST_API_USER = '{{ mailman_web.mailman_rest_api_user }}'
MAILMAN_REST_API_PASS = '{{ mailman_web.mailman_rest_api_pass }}'
MAILMAN_ARCHIVER_KEY = '{{ mailman_web.mailman_archiver_key }}'
MAILMAN_ARCHIVER_FROM = '{{ mailman_web.mailman_archiver_from }}'


# Application definition

INSTALLED_APPS = (
{% for app in mailman_web.installed_apps %}
     '{{ app.name }}',
{% endfor %}
)


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
{% for db in mailman_web.databases %}
    {{ '\'' ~ db.option_name ~ '\': {' }}
        'ENGINE': '{{ db.engine }}',
        'NAME': '{{ db.name }}',
        'USER': '{{ db.user }}',
        'PASSWORD': '{{ db.password }}',
        'HOST': '{{ db.host }}',
        'PORT': '{{ db.port }}',
        'OPTIONS': {
        },
    }
}
{% endfor %}


# If you're behind a proxy, use the X-Forwarded-Host header
# See https://docs.djangoproject.com/en/1.8/ref/settings/#use-x-forwarded-host
USE_X_FORWARDED_HOST = {{ mailman_web.use_x_forwarded_host }}

# And if your proxy does your SSL encoding for you, set SECURE_PROXY_SSL_HEADER
# https://docs.djangoproject.com/en/1.8/ref/settings/#secure-proxy-ssl-header
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_SCHEME', 'https')

# Other security settings
# SECURE_SSL_REDIRECT = True
# If you set SECURE_SSL_REDIRECT to True, make sure the SECURE_REDIRECT_EXEMPT
# contains at least this line:
# SECURE_REDIRECT_EXEMPT = [
#     "archives/api/mailman/.*",  # Request from Mailman.
#     ]
# SESSION_COOKIE_SECURE = True
# SECURE_CONTENT_TYPE_NOSNIFF = True
# SECURE_BROWSER_XSS_FILTER = True
# CSRF_COOKIE_SECURE = True
# CSRF_COOKIE_HTTPONLY = True
# X_FRAME_OPTIONS = 'DENY'


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True
USE_L10N = True
USE_TZ = True


# Set default domain for email addresses.
EMAILNAME = '{{ mailman_web.email_name }}'

# If you enable internal authentication, this is the address that the emails
# will appear to be coming from. Make sure you set a valid domain name,
# otherwise the emails may get rejected.
# https://docs.djangoproject.com/en/1.8/ref/settings/#default-from-email
# DEFAULT_FROM_EMAIL = "mailing-lists@you-domain.org"
DEFAULT_FROM_EMAIL = 'postorius@{}'.format(EMAILNAME)

# If you enable email reporting for error messages, this is where those emails
# will appear to be coming from. Make sure you set a valid domain name,
# otherwise the emails may get rejected.
# https://docs.djangoproject.com/en/1.8/ref/settings/#std:setting-SERVER_EMAIL
# SERVER_EMAIL = 'root@your-domain.org'
SERVER_EMAIL = 'root@{}'.format(EMAILNAME)


# Django Allauth
ACCOUNT_DEFAULT_HTTP_PROTOCOL = "{{ mailman_web.account_default_http_protocol }}"

# Social auth
#
SOCIALACCOUNT_PROVIDERS = {
    #'openid': {
    #    'SERVERS': [
    #        dict(id='yahoo',
    #             name='Yahoo',
    #             openid_url='http://me.yahoo.com'),
    #    ],
    #},
    #'google': {
    #    'SCOPE': ['profile', 'email'],
    #    'AUTH_PARAMS': {'access_type': 'online'},
    #},
    #'facebook': {
    #   'METHOD': 'oauth2',
    #   'SCOPE': ['email'],
    #   'FIELDS': [
    #       'email',
    #       'name',
    #       'first_name',
    #       'last_name',
    #       'locale',
    #       'timezone',
    #       ],
    #   'VERSION': 'v2.4',
    #},
}


# On a production setup, setting COMPRESS_OFFLINE to True will bring a
# significant performance improvement, as CSS files will not need to be
# recompiled on each requests. It means running an additional "compress"
# management command after each code upgrade.
# http://django-compressor.readthedocs.io/en/latest/usage/#offline-compression
COMPRESS_OFFLINE = {{ mailman_web.compress_offline }}

POSTORIUS_TEMPLATE_BASE_URL = '{{ mailman_web.postorius_template_base_url }}'
