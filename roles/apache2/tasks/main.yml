---
# tasks file for apache2

- name: Verificar OS
  fail:  msg="This role is not supported in {{ansible_os_family}} OS"
  when: ansible_os_family != "Debian"

# - name: loop
#   debug:
#     msg: "{{ item }}"
#   loop:
#     - hey
#     - man

# - name: Using dict2items
#   ansible.builtin.debug:
#     msg:
#       - "{{ item.key }}"
#       - " name:  {{ item.value.name }}"
#       - "conf_name:  {{ item.value.conf_name }}"
#   loop: "{{ apache2_vhost | dict2items }}"

- name: Instalar apache2
  apt:
    name: "{{ apache2_packages }}"
    update_cache: true
    state: present
  notify:
    - restart apache2

- name: Create vhosts
  template:
    src: vhost.conf.j2
    dest: /etc/apache2/sites-available/{{ item.key }}.conf
    backup: yes
    owner: root
    group: root
    mode: 0644
  loop: "{{ apache2_vhost | dict2items }}"
  when: apache2_create_vhost


- name: Create dir to vhost
  file:
    path: "{{ apache2_document_root }}/{{ item.key }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  loop: "{{ apache2_vhost | dict2items }}"
  when: apache2_create_vhost

#Criar loop para ativar os vhost's criados acima
# - name: Activate vhost
#   shell: a2ensite alcafaz.test.conf
#   notify:
#     - restart apache2
#   when: apache2_create_vhost

- name: Check apache2 config
  shell: apache2ctl configtest
  register: apache2_test_config

- debug:
    msg="{{apache2_test_config.stderr}}"





# - name: number of elements in list
#   debug:
#     msg="Number of elements -> {{ apache2_vhost|length

- name: Remove default vhost
  file:
    path: "{{ apache2_path }}/sites-enabled/{{ apache2_default_vhost_name }}"
    state: absent
  notify: restart apache2
  when: apache2_remove_default_vhost

- name: Add entry to UFW
  ufw:
    rule: 'allow'
    port: "{{ apache2_default_port }}"
    proto: tcp
