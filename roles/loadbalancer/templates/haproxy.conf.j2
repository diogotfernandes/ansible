#
# {{ ansible_managed }} at {{ ansible_date_time.date }}
#
{########## HAPROXY GLOBAL ##########}
{########## ############## ##########}
global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user {{ haproxy_global.user }}
    group {{ haproxy_global.group }}
    daemon

    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3

{########## HAPROXY DEFAULTS ##########}
{########## ################ ##########}
defaults
    {{ 'log ' ~ haproxy_defaults.log if haproxy_defaults.log is defined }}
    {{ 'mode ' ~ haproxy_defaults.mode if haproxy_defaults.mode is defined }}
{% for option in haproxy_defaults.options if haproxy_defaults.options is defined %}
    option {{ option.name }}
{% endfor %}
{% for timeout in haproxy_defaults.timeouts if haproxy_defaults.timeouts is defined %}
    timeout {{ timeout.name }} {{ timeout.time }}
{% endfor %}
{% for error in haproxy_defaults.errorfile if haproxy_defaults.errorfile is defined  %}
    errorfile {{ error.code }} {{ error.file }}
{% endfor %}

{########## HAPROXY FRONTEND ##########}
{########## ################ ##########}
{% if haproxy_listen is defined %}
listen {{ haproxy_listen.name }}
   {{ 'bind ' ~ haproxy_listen.bind[0].ip }}:{{ haproxy_listen.bind[0].port }}
{% for item in haproxy_listen.stats %}
   {{ 'stats ' ~ item.name if item.name != 'uri' else 'stats ' ~  item.name ~ ' ' ~ item.uri }}
{% endfor %}
{% endif %}

{########## HAPROXY FRONTEND ##########}
{########## ################ ##########}
{% if haproxy_frontend is defined %}
frontend {{ haproxy_frontend.name }}
    bind {{ haproxy_frontend.bind[0].ip }}:{{ haproxy_frontend.bind[0].port }}
    default_backend {{ haproxy_frontend.default_backend }}
{% endif %}

{########## HAPROXY BACKEND ##########}
{########## ############### ##########}
{% if haproxy_backend is defined %}
backend {{ haproxy_backend.name }}
{% if haproxy_backend is defined %}
    balance {{ haproxy_backend.balance }}
{% endif %}
{% for server in haproxy_backend.servers %}
    server {{ server.name }} {{ server.bind[0].ip }}:{{ server.bind[0].port }} {{ server.check if server.check is defined }} {{ 'weight ' ~ server.weight if server.weight is defined }}
{% endfor %}
{% endif %}
